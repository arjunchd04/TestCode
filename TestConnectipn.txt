package test;

import java.util.HashMap;
import java.util.Map;

import javax.sql.DataSource;

import org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder;
import org.springframework.boot.autoconfigure.orm.jpa.EntityManagerFactoryBuilder;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@Configuration
@EnableJpaRepositories(basePackages = "com.abc.service.testproject.repositories", entityManagerFactoryRef = "db1EntityManager", transactionManagerRef = "transactionManager")
@EnableTransactionManagement
public class TestProjectDBConfig
{
    /**
     * Datasource builder.
     * @return datasource.
     */
    @Bean
    @ConfigurationProperties(prefix = "spring.datasource.db1")
    public DataSource testProjectDataSource()
    {
        return DataSourceBuilder.create().build();
    }

    
    /**
     * EntityManagerFactory.
     * @param builder
     * @return LocalContainerEntityManagerFactoryBean
     */
    @Bean(name = "db1EntityManager")
    public LocalContainerEntityManagerFactoryBean EntityManagerFactory(EntityManagerFactoryBuilder builder)
    {
        Map<String, Object> properties = new HashMap<String, Object>();
        properties.put("hibernate.show-sql", "true");
        return builder.dataSource(testProjectDataSource()).packages(
            "com.abc.service.db1.entity").persistenceUnit("db1").build();
    }
}
